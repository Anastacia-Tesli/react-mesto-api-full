{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nconst request = _ref => {\n  let {\n    url,\n    method,\n    data\n  } = _ref;\n  return fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n    console.log(res);\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const register = _ref2 => {\n  let {\n    password,\n    email\n  } = _ref2;\n  return request({\n    url: `${BASE_URL}/signup`,\n    method: 'POST',\n    data: {\n      password,\n      email\n    }\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","request","url","method","data","fetch","headers","body","JSON","stringify","then","res","ok","json","console","log","Promise","reject","status","register","password","email","authorize","response","jwt","localStorage","setItem"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nconst request = ({url, method, data}) => {\r\n    return fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n    .then((res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        console.log(res)\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n}\r\n\r\nexport const register = ({password, email}) => {\r\n  return request({\r\n    url: `${BASE_URL}/signup`,\r\n    method: 'POST',\r\n    data: { password, email }\r\n  })\r\n}; \r\n\r\nexport const authorize = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({password, email})\r\n    })\r\n    .then((response => response.json()))\r\n    .then((data) => {\r\n      if (data.jwt){\r\n        localStorage.setItem('jwt', data.jwt);\r\n        return data;\r\n      }\r\n    })\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,OAAO,GAAG,QAAyB;EAAA,IAAxB;IAACC,GAAG;IAAEC,MAAM;IAAEC;EAAI,CAAC;EAChC,OAAOC,KAAK,CAACH,GAAG,EAAE;IACdC,MAAM,EAAEA,MAAM;IACdG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC7B,CAAC,CAAC,CACDM,IAAI,CAAEC,GAAG,IAAK;IACX,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,EAAE;IACrB;IACAC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;IAChB,OAAOK,OAAO,CAACC,MAAM,CAAE,WAAUN,GAAG,CAACO,MAAO,EAAC,CAAC;EAClD,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,SAAuB;EAAA,IAAtB;IAACC,QAAQ;IAAEC;EAAK,CAAC;EACxC,OAAOpB,OAAO,CAAC;IACbC,GAAG,EAAG,GAAEF,QAAS,SAAQ;IACzBG,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;MAAEgB,QAAQ;MAAEC;IAAM;EAC1B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACF,QAAQ,EAAEC,KAAK,KAAK;EAC1C,OAAOhB,KAAK,CAAE,GAAEL,QAAS,SAAQ,EAAE;IACjCG,MAAM,EAAE,MAAM;IACdG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACW,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDX,IAAI,CAAEa,QAAQ,IAAIA,QAAQ,CAACV,IAAI,EAAE,CAAE,CACnCH,IAAI,CAAEN,IAAI,IAAK;IACd,IAAIA,IAAI,CAACoB,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEtB,IAAI,CAACoB,GAAG,CAAC;MACrC,OAAOpB,IAAI;IACb;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}