{"ast":null,"code":"export default class Api {\n  constructor(object) {\n    this._baseUrl = object.baseUrl;\n    this._headers = object.headers;\n  }\n  _makePromise(url, method, body) {\n    return fetch(`${this._baseUrl}${url}`, {\n      method: `${method}`,\n      headers: this._headers,\n      body: body\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n  getUserInfo() {\n    return this._makePromise(\"/users/me\", \"GET\");\n  }\n  getInitialCards() {\n    return this._makePromise(\"/cards\", \"GET\");\n  }\n  editProfile(data) {\n    return this._makePromise(\"/users/me\", \"PATCH\", JSON.stringify({\n      name: `${data.name}`,\n      about: `${data.about}`\n    }));\n  }\n  editAvatar(data) {\n    return this._makePromise(\"/users/me/avatar\", \"PATCH\", JSON.stringify({\n      avatar: `${data.avatar}`\n    }));\n  }\n  addCard(data) {\n    return this._makePromise(\"/cards\", \"POST\", JSON.stringify({\n      name: `${data.name}`,\n      link: `${data.link}`\n    }));\n  }\n  deleteCard(id) {\n    return this._makePromise(\"/cards/\" + id, \"DELETE\");\n  }\n  putLike(id) {\n    return this._makePromise(\"/cards/\" + id + \"/likes\", \"PUT\");\n  }\n  deleteLike(id) {\n    return this._makePromise(\"/cards/\" + id + \"/likes\", \"DELETE\");\n  }\n}\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-52\",\n  headers: {\n    authorization: \"0e26ece0-9983-4f1f-b710-b6f03d354c92\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","object","_baseUrl","baseUrl","_headers","headers","_makePromise","url","method","body","fetch","then","res","ok","json","Promise","reject","status","getUserInfo","getInitialCards","editProfile","data","JSON","stringify","name","about","editAvatar","avatar","addCard","link","deleteCard","id","putLike","deleteLike","api","authorization"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["export default class Api {\r\n  constructor(object) {\r\n    this._baseUrl = object.baseUrl;\r\n    this._headers = object.headers;\r\n  }\r\n  _makePromise(url, method, body) {\r\n    return fetch(`${this._baseUrl}${url}`, {\r\n      method: `${method}`,\r\n      headers: this._headers,\r\n      body: body,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    });\r\n  }\r\n  getUserInfo() {\r\n    return this._makePromise(\"/users/me\", \"GET\");\r\n  }\r\n  getInitialCards() {\r\n    return this._makePromise(\"/cards\", \"GET\");\r\n  }\r\n  editProfile(data) {\r\n    return this._makePromise(\r\n      \"/users/me\",\r\n      \"PATCH\",\r\n      JSON.stringify({\r\n        name: `${data.name}`,\r\n        about: `${data.about}`,\r\n      })\r\n    );\r\n  }\r\n  editAvatar(data) {\r\n    return this._makePromise(\r\n      \"/users/me/avatar\",\r\n      \"PATCH\",\r\n      JSON.stringify({\r\n        avatar: `${data.avatar}`,\r\n      })\r\n    );\r\n  }\r\n  addCard(data) {\r\n    return this._makePromise(\r\n      \"/cards\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        name: `${data.name}`,\r\n        link: `${data.link}`,\r\n      })\r\n    );\r\n  }\r\n  deleteCard(id) {\r\n    return this._makePromise(\"/cards/\" + id, \"DELETE\");\r\n  }\r\n  putLike(id) {\r\n    return this._makePromise(\"/cards/\" + id + \"/likes\", \"PUT\");\r\n  }\r\n  deleteLike(id) {\r\n    return this._makePromise(\"/cards/\" + id + \"/likes\", \"DELETE\");\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-52\",\r\n  headers: {\r\n    authorization: \"0e26ece0-9983-4f1f-b710-b6f03d354c92\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n"],"mappings":"AAAA,eAAe,MAAMA,GAAG,CAAC;EACvBC,WAAW,CAACC,MAAM,EAAE;IAClB,IAAI,CAACC,QAAQ,GAAGD,MAAM,CAACE,OAAO;IAC9B,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACI,OAAO;EAChC;EACAC,YAAY,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC9B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACR,QAAS,GAAEK,GAAI,EAAC,EAAE;MACrCC,MAAM,EAAG,GAAEA,MAAO,EAAC;MACnBH,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBK,IAAI,EAAEA;IACR,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACf,IAAIA,GAAG,CAACC,EAAE,EAAE;QACV,OAAOD,GAAG,CAACE,IAAI,EAAE;MACnB;MACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;IAChD,CAAC,CAAC;EACJ;EACAC,WAAW,GAAG;IACZ,OAAO,IAAI,CAACZ,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC;EAC9C;EACAa,eAAe,GAAG;IAChB,OAAO,IAAI,CAACb,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC;EAC3C;EACAc,WAAW,CAACC,IAAI,EAAE;IAChB,OAAO,IAAI,CAACf,YAAY,CACtB,WAAW,EACX,OAAO,EACPgB,IAAI,CAACC,SAAS,CAAC;MACbC,IAAI,EAAG,GAAEH,IAAI,CAACG,IAAK,EAAC;MACpBC,KAAK,EAAG,GAAEJ,IAAI,CAACI,KAAM;IACvB,CAAC,CAAC,CACH;EACH;EACAC,UAAU,CAACL,IAAI,EAAE;IACf,OAAO,IAAI,CAACf,YAAY,CACtB,kBAAkB,EAClB,OAAO,EACPgB,IAAI,CAACC,SAAS,CAAC;MACbI,MAAM,EAAG,GAAEN,IAAI,CAACM,MAAO;IACzB,CAAC,CAAC,CACH;EACH;EACAC,OAAO,CAACP,IAAI,EAAE;IACZ,OAAO,IAAI,CAACf,YAAY,CACtB,QAAQ,EACR,MAAM,EACNgB,IAAI,CAACC,SAAS,CAAC;MACbC,IAAI,EAAG,GAAEH,IAAI,CAACG,IAAK,EAAC;MACpBK,IAAI,EAAG,GAAER,IAAI,CAACQ,IAAK;IACrB,CAAC,CAAC,CACH;EACH;EACAC,UAAU,CAACC,EAAE,EAAE;IACb,OAAO,IAAI,CAACzB,YAAY,CAAC,SAAS,GAAGyB,EAAE,EAAE,QAAQ,CAAC;EACpD;EACAC,OAAO,CAACD,EAAE,EAAE;IACV,OAAO,IAAI,CAACzB,YAAY,CAAC,SAAS,GAAGyB,EAAE,GAAG,QAAQ,EAAE,KAAK,CAAC;EAC5D;EACAE,UAAU,CAACF,EAAE,EAAE;IACb,OAAO,IAAI,CAACzB,YAAY,CAAC,SAAS,GAAGyB,EAAE,GAAG,QAAQ,EAAE,QAAQ,CAAC;EAC/D;AACF;AAEA,OAAO,MAAMG,GAAG,GAAG,IAAInC,GAAG,CAAC;EACzBI,OAAO,EAAE,6CAA6C;EACtDE,OAAO,EAAE;IACP8B,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}