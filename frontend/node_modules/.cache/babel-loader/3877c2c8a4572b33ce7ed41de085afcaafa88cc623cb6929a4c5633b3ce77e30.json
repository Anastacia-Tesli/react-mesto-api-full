{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tesli\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport Card from './Card.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  });\n  const user = React.useContext(CurrentUserContext);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(like => like._id === user._id);\n    if (!isLiked) {\n      api.putLike(card._id).then(newCard => {\n        setCards(state => {\n          state.map(item => item._id === card._id ? newCard : item);\n        });\n      }).catch(err => {\n        console.log(`Ошибка: ${err}`);\n      });\n    } else {\n      api.deleteLike(card._id);\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__pic\",\n        onClick: props.onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n          src: user.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button_open profile__edit-button\",\n            onClick: props.onEditProfile,\n            type: \"button\",\n            \"aria-label\": \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__job\",\n          children: user.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button_open profile__add-button\",\n        onClick: props.onAddPlace,\n        type: \"button\",\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: props.onCardClick,\n        onDeleteClick: props.onDeleteClick,\n        onCardLike: handleCardLike(card)\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"85YsjUatoOKFAVLyHZ5nXXhZsx8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["api","CurrentUserContext","Card","React","Main","props","cards","setCards","useState","useEffect","getInitialCards","then","catch","err","console","log","user","useContext","handleCardLike","card","isLiked","likes","some","like","_id","putLike","newCard","state","map","item","deleteLike","onEditAvatar","avatar","name","onEditProfile","about","onAddPlace","onCardClick","onDeleteClick"],"sources":["C:/Users/tesli/dev/mesto-react/src/components/Main.js"],"sourcesContent":["import {api} from '../utils/api.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport Card from './Card.js';\r\nimport React from 'react';\r\nfunction Main(props) {\r\n    const [cards, setCards] = React.useState([]);\r\n    React.useEffect(() => {\r\n        api.getInitialCards()\r\n        .then((cards) => {\r\n            setCards(cards)\r\n        })\r\n        .catch((err) => {\r\n            console.log(`Ошибка: ${err}`);\r\n        })\r\n    });\r\n    const user = React.useContext(CurrentUserContext);\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some((like) => like._id === user._id);\r\n        if (!isLiked) {\r\n            api.putLike(card._id)\r\n            .then((newCard) => {\r\n            setCards((state) => {\r\n                state.map((item) => item._id === card._id ? newCard : item)});\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Ошибка: ${err}`);\r\n            })\r\n        } else {\r\n            api.deleteLike(card._id)\r\n        }\r\n        \r\n        \r\n    };\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__pic\" onClick={props.onEditAvatar}>\r\n                    <img className=\"profile__avatar\" alt=\"Аватар пользователя\" src={user.avatar}/>\r\n                </div>\r\n                <div className=\"profile__info\">\r\n                   <div className=\"profile__heading\">\r\n                        <h1 className=\"profile__name\">{user.name}</h1>\r\n                        <button className=\"button button_open profile__edit-button\" onClick={props.onEditProfile} type=\"button\" aria-label=\"Открыть редактирование профиля\"></button>\r\n                    </div>\r\n                    <p className=\"profile__job\">{user.about}</p>\r\n                </div>\r\n                <button className=\"button button_open profile__add-button\" onClick={props.onAddPlace} type=\"button\" aria-label=\"Добавить место\"></button>\r\n            </section>\r\n            <section className=\"places\">\r\n                {cards.map((card) => (\r\n                    <Card key={card._id} card={card} onCardClick={props.onCardClick} onDeleteClick={props.onDeleteClick} onCardLike={handleCardLike(card)}></Card>\r\n                ))}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}