{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nfunction getResponse(res) {\n  if (!res.ok) {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  return res.json();\n}\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: `POST`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => getResponse(res));\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: `POST`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => getResponse(res));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: `GET`,\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => getResponse(res));\n};","map":{"version":3,"names":["BASE_URL","getResponse","res","ok","Promise","reject","status","json","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nfunction getResponse(res) {\r\n  if (!res.ok) { \r\n    return Promise.reject(`Ошибка: ${res.status}`); \r\n  } \r\n  return res.json(); \r\n}\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: `POST`,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ password, email })\r\n    })\r\n    .then((res) => getResponse(res))\r\n}\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: `POST`,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n  .then((res) => getResponse(res))\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: `GET`,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\" : `Bearer ${token}`\r\n    },\r\n  })\r\n  .then((res) => getResponse(res))\r\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,WAAW,CAACC,GAAG,EAAE;EACxB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;IACX,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUH,GAAG,CAACI,MAAO,EAAC,CAAC;EAChD;EACA,OAAOJ,GAAG,CAACK,IAAI,EAAE;AACnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAG,MAAK;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC5C,CAAC,CAAC,CACDO,IAAI,CAAEf,GAAG,IAAKD,WAAW,CAACC,GAAG,CAAC,CAAC;AACpC,CAAC;AAED,OAAO,MAAMgB,SAAS,GAAG,CAACT,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAG,MAAK;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CACDO,IAAI,CAAEf,GAAG,IAAKD,WAAW,CAACC,GAAG,CAAC,CAAC;AAClC,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAG,KAAI;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASO,KAAM;IACpC;EACF,CAAC,CAAC,CACDH,IAAI,CAAEf,GAAG,IAAKD,WAAW,CAACC,GAAG,CAAC,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}