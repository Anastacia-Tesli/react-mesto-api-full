{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: `POST`,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (!res.ok) {\n      console.log(res);\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  });\n};\nexport const authorize = (password, email) => {\n  return request(`/signin`, 'POST', JSON.stringify({\n    password,\n    email\n  })).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return request(`/users/me`, 'GET');\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","console","log","Promise","reject","status","json","authorize","request","data","jwt","localStorage","setItem","getContent","token"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: `POST`,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ password, email })\r\n    })\r\n    .then((res) => {\r\n        if (!res.ok) {\r\n          console.log(res)\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    })\r\n}\r\n\r\nexport const authorize = (password, email) => {\r\n  return request(`/signin`, 'POST', JSON.stringify({ password, email }))\r\n  .then((data) => {\r\n    if (data.jwt){\r\n      localStorage.setItem('jwt', data.jwt);\r\n      return data;\r\n    }\r\n  })\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return request(`/users/me`, 'GET')\r\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAG,MAAK;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC5C,CAAC,CAAC,CACDO,IAAI,CAAEC,GAAG,IAAK;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACXC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,OAAOI,OAAO,CAACC,MAAM,CAAE,WAAUL,GAAG,CAACM,MAAO,EAAC,CAAC;IAChD;IACA,OAAON,GAAG,CAACO,IAAI,EAAE;EACrB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACjB,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOiB,OAAO,CAAE,SAAQ,EAAE,MAAM,EAAEZ,IAAI,CAACC,SAAS,CAAC;IAAEP,QAAQ;IAAEC;EAAM,CAAC,CAAC,CAAC,CACrEO,IAAI,CAAEW,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAON,OAAO,CAAE,WAAU,EAAE,KAAK,CAAC;AACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}