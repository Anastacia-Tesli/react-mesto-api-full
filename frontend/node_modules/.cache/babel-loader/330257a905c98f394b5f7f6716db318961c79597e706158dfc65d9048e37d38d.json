{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","authorize","data","jwt","localStorage","setItem"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n  .then((response) => {\r\n    try {\r\n      if (response.status === 200){\r\n        return response.json();\r\n      }\r\n    } catch(e){\r\n      return (e)\r\n    }\r\n  })\r\n  .then((res) => {\r\n    return res;\r\n  })\r\n  .catch((err) => console.log(err));\r\n}; \r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({email, password})\r\n    })\r\n    .then((response => response.json()))\r\n    .then((data) => {\r\n      if (data.jwt){\r\n        localStorage.setItem('jwt', data.jwt);\r\n        return data;\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }; "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,CAACjB,KAAK,EAAED,QAAQ,KAAK;EAC1C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN,KAAK;MAAED;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE,CAAE,CACnCH,IAAI,CAAEW,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC,CACDL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}