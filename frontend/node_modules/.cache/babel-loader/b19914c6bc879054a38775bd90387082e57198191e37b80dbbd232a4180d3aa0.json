{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      console.log(res);\n      return res.json();\n    }\n    console.log(res);\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","console","log","json","Promise","reject","status","authorize","response","data","jwt","localStorage","setItem"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  })\r\n  \r\n  .then((res) => {\r\n    if (res.ok) {\r\n        console.log(res)\r\n        return res.json();\r\n        \r\n    }\r\n    console.log(res)\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  })\r\n}; \r\n\r\nexport const authorize = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({password, email})\r\n    })\r\n    .then((response => response.json()))\r\n    .then((data) => {\r\n      if (data.jwt){\r\n        localStorage.setItem('jwt', data.jwt);\r\n        return data;\r\n      }\r\n    })\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAEDO,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIA,GAAG,CAACC,EAAE,EAAE;MACRC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,OAAOA,GAAG,CAACI,IAAI,EAAE;IAErB;IACAF,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,OAAOK,OAAO,CAACC,MAAM,CAAE,WAAUN,GAAG,CAACO,MAAO,EAAC,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,CAACjB,QAAQ,EAAEC,KAAK,KAAK;EAC1C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEU,QAAQ,IAAIA,QAAQ,CAACL,IAAI,EAAE,CAAE,CACnCL,IAAI,CAAEW,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}