{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const request = (url, method, body, token) => {\n  return fetch(`${BASE_URL}${url}`, {\n    method: `${method}`,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: body\n  }).then(res => {\n    if (!res.ok) {\n      console.log(res);\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  });\n};\nexport const register = (password, email) => {\n  return request('/signup', 'POST', JSON.stringify({\n    password: password,\n    email: email\n  }));\n};\nexport const authorize = (password, email) => {\n  return request(`/signin`, 'POST', JSON.stringify({\n    password,\n    email\n  })).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return request(`/users/me`, 'GET');\n};","map":{"version":3,"names":["BASE_URL","request","url","method","body","token","fetch","headers","then","res","ok","console","log","Promise","reject","status","json","register","password","email","JSON","stringify","authorize","data","jwt","localStorage","setItem","getContent"],"sources":["C:/Users/tesli/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const request = (url, method, body, token) => {\r\n    return fetch(`${BASE_URL}${url}`, {\r\n        method: `${method}`,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: body\r\n    })\r\n    .then((res) => {\r\n        if (!res.ok) {\r\n          console.log(res)\r\n          return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    })\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return request('/signup', 'POST', JSON.stringify({ password: password, email: email }))\r\n}; \r\n\r\nexport const authorize = (password, email) => {\r\n    return request(`/signin`, 'POST', JSON.stringify({ password, email }))\r\n    .then((data) => {\r\n      if (data.jwt){\r\n        localStorage.setItem('jwt', data.jwt);\r\n        return data;\r\n      }\r\n    })\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return request(`/users/me`, 'GET')\r\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,OAAO,GAAG,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;EACjD,OAAOC,KAAK,CAAE,GAAEN,QAAS,GAAEE,GAAI,EAAC,EAAE;IAC9BC,MAAM,EAAG,GAAEA,MAAO,EAAC;IACnBI,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASF,KAAM;IACrC,CAAC;IACDD,IAAI,EAAEA;EACV,CAAC,CAAC,CACDI,IAAI,CAAEC,GAAG,IAAK;IACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACXC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,OAAOI,OAAO,CAACC,MAAM,CAAE,WAAUL,GAAG,CAACM,MAAO,EAAC,CAAC;IAChD;IACA,OAAON,GAAG,CAACO,IAAI,EAAE;EACrB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOlB,OAAO,CAAC,SAAS,EAAE,MAAM,EAAEmB,IAAI,CAACC,SAAS,CAAC;IAAEH,QAAQ,EAAEA,QAAQ;IAAEC,KAAK,EAAEA;EAAM,CAAC,CAAC,CAAC;AACzF,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,CAACJ,QAAQ,EAAEC,KAAK,KAAK;EAC1C,OAAOlB,OAAO,CAAE,SAAQ,EAAE,MAAM,EAAEmB,IAAI,CAACC,SAAS,CAAC;IAAEH,QAAQ;IAAEC;EAAM,CAAC,CAAC,CAAC,CACrEX,IAAI,CAAEe,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,UAAU,GAAItB,KAAK,IAAK;EACnC,OAAOJ,OAAO,CAAE,WAAU,EAAE,KAAK,CAAC;AACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}