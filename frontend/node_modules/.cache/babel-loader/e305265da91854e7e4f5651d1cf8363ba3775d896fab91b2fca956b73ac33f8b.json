{"ast":null,"code":"export var BASE_URL='http://api.mesto-project.nomoredomains.work';function getResponse(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return getResponse(res);});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return getResponse(res);});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(token)}}).then(function(res){return getResponse(res);});};","map":{"version":3,"names":["BASE_URL","getResponse","res","ok","Promise","reject","status","json","register","password","email","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token","Authorization"],"sources":["C:/Users/tesli/dev/react-mesto-api-full/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'http://api.mesto-project.nomoredomains.work';\r\n\r\nfunction getResponse(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: `POST`,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then((res) => getResponse(res));\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: `POST`,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then((res) => getResponse(res));\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: `GET`,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => getResponse(res));\r\n};\r\n"],"mappings":"AAAA,MAAO,IAAMA,SAAQ,CAAG,6CAA6C,CAErE,QAASC,YAAW,CAACC,GAAG,CAAE,CACxB,GAAI,CAACA,GAAG,CAACC,EAAE,CAAE,CACX,MAAOC,QAAO,CAACC,MAAM,iDAAYH,GAAG,CAACI,MAAM,EAAG,CAChD,CACA,MAAOJ,IAAG,CAACK,IAAI,EAAE,CACnB,CAEA,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAC3C,MAAOC,MAAK,WAAIX,QAAQ,YAAW,CACjCY,MAAM,OAAQ,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAAC,SAACf,GAAG,QAAKD,YAAW,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC,CAED,MAAO,IAAMgB,UAAS,CAAG,QAAZA,UAAS,CAAIT,QAAQ,CAAEC,KAAK,CAAK,CAC5C,MAAOC,MAAK,WAAIX,QAAQ,YAAW,CACjCY,MAAM,OAAQ,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAQ,CAARA,QAAQ,CAAEC,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CAACO,IAAI,CAAC,SAACf,GAAG,QAAKD,YAAW,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC,CAED,MAAO,IAAMiB,WAAU,CAAG,QAAbA,WAAU,CAAIC,KAAK,CAAK,CACnC,MAAOT,MAAK,WAAIX,QAAQ,cAAa,CACnCY,MAAM,MAAO,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCQ,aAAa,kBAAYD,KAAK,CAChC,CACF,CAAC,CAAC,CAACH,IAAI,CAAC,SAACf,GAAG,QAAKD,YAAW,CAACC,GAAG,CAAC,GAAC,CACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}